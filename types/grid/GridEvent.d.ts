import GridApi from "./GridApi";

export default interface GridEvent {
  activate?(grid: GridApi): void;
  beforeedit?(grid: GridApi, params: any): void;
  beforeendedit?(grid: GridApi, params: any): void;
  cellclick?(grid: GridApi, params: any): void;
  celldblclick?(grid: GridApi, params: any): void;
  cellenter?(grid: GridApi, params: any): void;
  cellleave?(grid: GridApi, params: any): void;
  change?(grid: GridApi, params: any): void;
  changepage?(grid: GridApi, page: number): void;
  changepagesize?(grid: GridApi, pageSize: number): void;
  columnclick?(grid: GridApi, params: any): void;
  columndblclick?(grid: GridApi, params: any): void;
  columndrag?(grid: GridApi, params: any): void;
  columnenter?(grid: GridApi, params: any): void;
  columnhide?(grid: GridApi, params: any): void;
  columnleave?(grid: GridApi, params: any): void;
  columnshow?(grid: GridApi, params: any): void;
  columnresize?(grid: GridApi, params: any): void;
  columntitlechange?(grid: GridApi, params: any): void;
  contextmenu?(grid: GridApi, params: any): void;
  deactivate?(grid: GridApi): void;
  delay?: number;
  deselectrow?(grid: GridApi, rowIndex: number, dataItem: any): void;
  dragrows?(grid: GridApi, rows: any[]): void;
  dropitems?(grid: GridApi, items: any[], rowIndex: number): void;
  endedit?(grid: GridApi, params: any): void;
  filter?(grid: GridApi, filters: any): void;
  init?(grid: GridApi): void;
  insert?(grid: GridApi, item: any): void;
  headercellclick?(grid: GridApi, params: any): void;
  headercellenter?(grid: GridApi, params: any): void;
  headercellleave?(grid: GridApi, params: any): void;
  load?(grid: GridApi, params: any): void;
  lockcolumn?(grid: GridApi, params: any): void;
  remove?(grid: GridApi, id: number|string, item: any): void;
  rowclick?(grid: GridApi, params: any): void;
  rowdblclick?(grid: GridApi, params: any): void;
  rowenter?(grid: GridApi, params: any): void;
  rowleave?(grid: GridApi, params: any): void;
  scope?: any;
  select?(grid: GridApi, selection: any[]|any): void;
  selectrow?(grid: GridApi, rowIndex: number, dataItem: any): void;
  servererror?(grid: GridApi, errorName: string, error: any, response: any): void;
  set?(grid: GridApi, params: any): void;
  sort?(grid: GridApi, params: any): void;
  startedit?(grid: GridApi, params: any): void;
  statechange?(grid: GridApi, state: any): void;
  unlockcolumn?(grid: GridApi, params: any): void;
  update?(grid: GridApi, params: any): void;
}